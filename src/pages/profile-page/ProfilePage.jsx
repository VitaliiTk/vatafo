// libs
import { useMutation, useQueryClient } from '@tanstack/react-query'
import api from '../../api/axios'
// components
import { Button } from '../../components/button/Button'
// jotai - store
import { useState } from 'react'
// styles
import './profile.css'

// functions ================================================
// –æ—Ç–ø—Ä–∞–≤–∫–∞ post –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å —Ñ–æ—Ç–æ
const editUser = async (newAvatar) => {
  try {
    const { data } = await api.post('/users/avatar', { avatar: newAvatar })
    return data
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error)
  }
}

// master ==========================================================
export function ProfilePage() {
  const [editView, setEditView] = useState(false)
  const [formWar, setFormWar] = useState('')
  const [avatar, setAvatar] = useState('')
  const queryClient = useQueryClient() // —Ç–∏–ø–∞ –ø–æ–¥–∫–ª—é—á–∞–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

  const user = queryClient.getQueryData(['user']) // —Ç–æ–ª—å–∫–æ –±–µ—Ä—É –¥–∞–Ω–Ω—ã–µ user –∏–∑ –∫—ç—à–∞ tanstack

  // –º—É—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const mutation = useMutation({
    mutationFn: editUser,
    onSuccess: (data) => {
      queryClient.setQueryData(['user'], data) // üî• –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
      setFormWar('Success') // —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –≤ state
      setAvatar(data.avatar) // —á–∏—Å—Ç–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∂–µ —Ñ–æ—Ç–æ —á—Ç–æ –∏ –±—ã–ª–æ
      setEditView(false) // –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    }
  })

  // —Ä–∞–±–æ—Ç–∞ —Å —Ñ–æ—Ä–º–æ–π
  async function formSubmit(formData) {
    const newAvatarUrl = formData.get('avatarUrl')
    if (!newAvatarUrl) return console.error('–í—Å—Ç–∞–≤—å—Ç–µ URL –∫–∞—Ä—Ç–∏–Ω–∫–∏')
    if (avatar === newAvatarUrl) return setFormWar('–≠—Ç–æ —Ñ–æ—Ç–æ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ') // —á–∏—Å—Ç–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∂–µ —Ñ–æ—Ç–æ —á—Ç–æ –∏ –±—ã–ª–æ
    mutation.mutate(newAvatarUrl)
  }

  // if (isPending) return <h2>Loading...</h2>

  // if (isError) {
  //   console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', error)
  //   // return <RegModal />
  //   return <h2>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞! –í–æ–π–¥–∏—Ç–µ –∞ –∞–∫–∞—É–Ω—Ç</h2>
  // }
  // –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —ç—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  if (!user) return <h2>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞! –í–æ–π–¥–∏—Ç–µ –∞ –∞–∫–∞—É–Ω—Ç</h2>

  return (
    <div className="profile-page">
      <h2 className="profile-page__title">{user.username}</h2>
      <div className="profile-info">
        <div className="info">
          <img
            className="avatar"
            src={user.avatar ? user.avatar : '/avatars/avatar-default.svg'}
            alt=""
          />
        </div>
        <div className="info">Email: {user.email}</div>
        <div className="info">Status: {user.status}</div>
        {editView && (
          <form className="edit-form" action={formSubmit}>
            <div className="edit-input__box">
              <label htmlFor="avatarUrl">–í—Å—Ç–∞–≤—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ</label>
              <input
                id="avatarUrl"
                name="avatarUrl"
                className="edit-input"
                type="url"
                placeholder="image url"
                required
              />
              {editView && <button>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>}
            </div>
          </form>
        )}
        {!editView && (
          <Button onClickHandler={() => setEditView((prev) => !prev)}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</Button>
        )}
        {editView && <Button onClickHandler={() => setEditView((prev) => !prev)}>–û—Ç–º–µ–Ω–∞</Button>}

        <p className="warning">{formWar}</p>
      </div>
    </div>
  )
}
